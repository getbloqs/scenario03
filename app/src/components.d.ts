/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';


import {
  IcoApp as IcoApp
} from './components/ico-app/ico-app';

declare global {
  interface HTMLIcoAppElement extends IcoApp, HTMLElement {
  }
  var HTMLIcoAppElement: {
    prototype: HTMLIcoAppElement;
    new (): HTMLIcoAppElement;
  };
  interface HTMLElementTagNameMap {
    "ico-app": HTMLIcoAppElement;
  }
  interface ElementTagNameMap {
    "ico-app": HTMLIcoAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ico-app": JSXElements.IcoAppAttributes;
    }
  }
  namespace JSXElements {
    export interface IcoAppAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  IcoInformation as IcoInformation
} from './components/ico-information/ico-information';

declare global {
  interface HTMLIcoInformationElement extends IcoInformation, HTMLElement {
  }
  var HTMLIcoInformationElement: {
    prototype: HTMLIcoInformationElement;
    new (): HTMLIcoInformationElement;
  };
  interface HTMLElementTagNameMap {
    "ico-information": HTMLIcoInformationElement;
  }
  interface ElementTagNameMap {
    "ico-information": HTMLIcoInformationElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ico-information": JSXElements.IcoInformationAttributes;
    }
  }
  namespace JSXElements {
    export interface IcoInformationAttributes extends HTMLAttributes {
      tokensInvested?: string;
      tokensTotal?: string;
    }
  }
}


import {
  IcoInvestment as IcoInvestment
} from './components/ico-investment/ico-investment';

declare global {
  interface HTMLIcoInvestmentElement extends IcoInvestment, HTMLElement {
  }
  var HTMLIcoInvestmentElement: {
    prototype: HTMLIcoInvestmentElement;
    new (): HTMLIcoInvestmentElement;
  };
  interface HTMLElementTagNameMap {
    "ico-investment": HTMLIcoInvestmentElement;
  }
  interface ElementTagNameMap {
    "ico-investment": HTMLIcoInvestmentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ico-investment": JSXElements.IcoInvestmentAttributes;
    }
  }
  namespace JSXElements {
    export interface IcoInvestmentAttributes extends HTMLAttributes {
      crowdsaleAccount?: string;
      crowdsaleRate?: string;
    }
  }
}


import {
  IcoSearch as IcoSearch
} from './components/ico-search/ico-search';

declare global {
  interface HTMLIcoSearchElement extends IcoSearch, HTMLElement {
  }
  var HTMLIcoSearchElement: {
    prototype: HTMLIcoSearchElement;
    new (): HTMLIcoSearchElement;
  };
  interface HTMLElementTagNameMap {
    "ico-search": HTMLIcoSearchElement;
  }
  interface ElementTagNameMap {
    "ico-search": HTMLIcoSearchElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ico-search": JSXElements.IcoSearchAttributes;
    }
  }
  namespace JSXElements {
    export interface IcoSearchAttributes extends HTMLAttributes {
      
    }
  }
}

